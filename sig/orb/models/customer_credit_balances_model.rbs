module Orb
  module Models
    type customer_credit_balances_model =
      {
        data: ::Array[Orb::Models::CustomerCreditBalancesModel::Data],
        pagination_metadata: Orb::Models::PaginationMetadata
      }

    class CustomerCreditBalancesModel < Orb::BaseModel
      attr_accessor data: ::Array[Orb::Models::CustomerCreditBalancesModel::Data]

      attr_accessor pagination_metadata: Orb::Models::PaginationMetadata

      def initialize:
        (
          data: ::Array[Orb::Models::CustomerCreditBalancesModel::Data],
          pagination_metadata: Orb::Models::PaginationMetadata
        ) -> void
        | (
          ?Orb::Models::customer_credit_balances_model | Orb::BaseModel data
        ) -> void

      def to_hash: -> Orb::Models::customer_credit_balances_model

      type data =
        {
          id: String,
          balance: Float,
          effective_date: Time?,
          expiry_date: Time?,
          maximum_initial_balance: Float?,
          per_unit_cost_basis: String?,
          status: Orb::Models::CustomerCreditBalancesModel::Data::status
        }

      class Data < Orb::BaseModel
        attr_accessor id: String

        attr_accessor balance: Float

        attr_accessor effective_date: Time?

        attr_accessor expiry_date: Time?

        attr_accessor maximum_initial_balance: Float?

        attr_accessor per_unit_cost_basis: String?

        attr_accessor status: Orb::Models::CustomerCreditBalancesModel::Data::status

        def initialize:
          (
            id: String,
            balance: Float,
            effective_date: Time?,
            expiry_date: Time?,
            maximum_initial_balance: Float?,
            per_unit_cost_basis: String?,
            status: Orb::Models::CustomerCreditBalancesModel::Data::status
          ) -> void
          | (
            ?Orb::Models::CustomerCreditBalancesModel::data
            | Orb::BaseModel data
          ) -> void

        def to_hash: -> Orb::Models::CustomerCreditBalancesModel::data

        type status = :active | :pending_payment

        class Status < Orb::Enum
          ACTIVE: :active
          PENDING_PAYMENT: :pending_payment

          def self.values: -> ::Array[Orb::Models::CustomerCreditBalancesModel::Data::status]
        end
      end
    end
  end
end
