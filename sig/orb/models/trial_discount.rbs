module Orb
  module Models
    type trial_discount =
      {
        applies_to_price_ids: ::Array[String],
        discount_type: Orb::Models::TrialDiscount::discount_type,
        reason: String?,
        trial_amount_discount: String?,
        trial_percentage_discount: Float?
      }

    class TrialDiscount < Orb::Internal::Type::BaseModel
      attr_accessor applies_to_price_ids: ::Array[String]

      attr_accessor discount_type: Orb::Models::TrialDiscount::discount_type

      attr_accessor reason: String?

      attr_accessor trial_amount_discount: String?

      attr_accessor trial_percentage_discount: Float?

      def initialize: (
        applies_to_price_ids: ::Array[String],
        discount_type: Orb::Models::TrialDiscount::discount_type,
        ?reason: String?,
        ?trial_amount_discount: String?,
        ?trial_percentage_discount: Float?
      ) -> void

      def to_hash: -> {
        applies_to_price_ids: ::Array[String],
        discount_type: Orb::Models::TrialDiscount::discount_type,
        reason: String?,
        trial_amount_discount: String?,
        trial_percentage_discount: Float?
      }

      type discount_type = :trial

      module DiscountType
        extend Orb::Internal::Type::Enum

        TRIAL: :trial

        def self?.values: -> ::Array[Orb::Models::TrialDiscount::discount_type]
      end
    end
  end
end
