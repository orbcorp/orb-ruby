module Orb
  module Models
    type payment_attempt_model =
      {
        id: String,
        amount: String,
        created_at: Time,
        payment_provider: Orb::Models::PaymentAttemptModel::payment_provider?,
        payment_provider_id: String?,
        succeeded: bool
      }

    class PaymentAttemptModel < Orb::BaseModel
      attr_accessor id: String

      attr_accessor amount: String

      attr_accessor created_at: Time

      attr_accessor payment_provider: Orb::Models::PaymentAttemptModel::payment_provider?

      attr_accessor payment_provider_id: String?

      attr_accessor succeeded: bool

      def initialize:
        (
          id: String,
          amount: String,
          created_at: Time,
          payment_provider: Orb::Models::PaymentAttemptModel::payment_provider?,
          payment_provider_id: String?,
          succeeded: bool
        ) -> void
        | (?Orb::Models::payment_attempt_model | Orb::BaseModel data) -> void

      def to_hash: -> Orb::Models::payment_attempt_model

      type payment_provider = :stripe

      class PaymentProvider < Orb::Enum
        STRIPE: :stripe

        def self.values: -> ::Array[Orb::Models::PaymentAttemptModel::payment_provider]
      end
    end
  end
end
