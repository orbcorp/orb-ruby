module Orb
  module Models
    type subscription_fetch_schedule_params =
      {
        cursor: String?,
        limit: Integer,
        start_date_gt: Time?,
        start_date_gte: Time?,
        start_date_lt: Time?,
        start_date_lte: Time?
      }
      & Orb::request_parameters

    class SubscriptionFetchScheduleParams < Orb::BaseModel
      extend Orb::RequestParameters::Converter
      include Orb::RequestParameters

      attr_accessor cursor: String?

      attr_reader limit: Integer?

      def limit=: (Integer) -> void

      attr_accessor start_date_gt: Time?

      attr_accessor start_date_gte: Time?

      attr_accessor start_date_lt: Time?

      attr_accessor start_date_lte: Time?

      def initialize:
        (
          cursor: String?,
          limit: Integer,
          start_date_gt: Time?,
          start_date_gte: Time?,
          start_date_lt: Time?,
          start_date_lte: Time?,
          request_options: Orb::request_opts
        ) -> void
        | (
          ?Orb::Models::subscription_fetch_schedule_params | Orb::BaseModel data
        ) -> void

      def to_hash: -> Orb::Models::subscription_fetch_schedule_params
    end
  end
end
