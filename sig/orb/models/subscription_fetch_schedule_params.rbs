module Orb
  module Models
    type subscription_fetch_schedule_params =
      {
        cursor: String?,
        limit: Integer,
        start_date_gt: Time?,
        start_date_gte: Time?,
        start_date_lt: Time?,
        start_date_lte: Time?
      }
      & Orb::Internal::Type::request_parameters

    class SubscriptionFetchScheduleParams < Orb::Internal::Type::BaseModel
      extend Orb::Internal::Type::RequestParameters::Converter
      include Orb::Internal::Type::RequestParameters

      attr_accessor cursor: String?

      attr_reader limit: Integer?

      def limit=: (Integer) -> Integer

      attr_accessor start_date_gt: Time?

      attr_accessor start_date_gte: Time?

      attr_accessor start_date_lt: Time?

      attr_accessor start_date_lte: Time?

      def initialize: (
        ?cursor: String?,
        ?limit: Integer,
        ?start_date_gt: Time?,
        ?start_date_gte: Time?,
        ?start_date_lt: Time?,
        ?start_date_lte: Time?,
        ?request_options: Orb::request_opts
      ) -> void

      def to_hash: -> Orb::Models::subscription_fetch_schedule_params
    end
  end
end
