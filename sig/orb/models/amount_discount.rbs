module Orb
  module Models
    type amount_discount =
      {
        amount_discount: String,
        discount_type: Orb::Models::AmountDiscount::discount_type,
        applies_to_price_ids: ::Array[String]?,
        reason: String?
      }

    class AmountDiscount < Orb::Internal::Type::BaseModel
      attr_accessor amount_discount: String

      attr_accessor discount_type: Orb::Models::AmountDiscount::discount_type

      attr_accessor applies_to_price_ids: ::Array[String]?

      attr_accessor reason: String?

      def initialize: (
        amount_discount: String,
        discount_type: Orb::Models::AmountDiscount::discount_type,
        ?applies_to_price_ids: ::Array[String]?,
        ?reason: String?
      ) -> void

      def to_hash: -> {
        amount_discount: String,
        discount_type: Orb::Models::AmountDiscount::discount_type,
        applies_to_price_ids: ::Array[String]?,
        reason: String?
      }

      type discount_type = :amount

      module DiscountType
        extend Orb::Internal::Type::Enum

        AMOUNT: :amount

        def self?.values: -> ::Array[Orb::Models::AmountDiscount::discount_type]
      end
    end
  end
end
