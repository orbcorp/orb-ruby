module Orb
  module Models
    type price_evaluate_params =
      {
        timeframe_end: Time,
        timeframe_start: Time,
        customer_id: String?,
        external_customer_id: String?,
        filter: String?,
        grouping_keys: ::Array[String]
      }
      & Orb::Internal::Type::request_parameters

    class PriceEvaluateParams < Orb::Internal::Type::BaseModel
      extend Orb::Internal::Type::RequestParameters::Converter
      include Orb::Internal::Type::RequestParameters

      attr_accessor timeframe_end: Time

      attr_accessor timeframe_start: Time

      attr_accessor customer_id: String?

      attr_accessor external_customer_id: String?

      attr_accessor filter: String?

      attr_reader grouping_keys: ::Array[String]?

      def grouping_keys=: (::Array[String]) -> ::Array[String]

      def initialize: (
        timeframe_end: Time,
        timeframe_start: Time,
        ?customer_id: String?,
        ?external_customer_id: String?,
        ?filter: String?,
        ?grouping_keys: ::Array[String],
        ?request_options: Orb::request_opts
      ) -> void

      def to_hash: -> Orb::Models::price_evaluate_params
    end
  end
end
