module Orb
  module Models
    type subscription_schedule_plan_change_params =
      {
        change_option: Orb::Models::SubscriptionSchedulePlanChangeParams::change_option,
        add_adjustments: ::Array[Orb::Models::AddSubscriptionAdjustmentParams]?,
        add_prices: ::Array[Orb::Models::AddSubscriptionPriceParams]?,
        align_billing_with_plan_change_date: bool?,
        auto_collection: bool?,
        billing_cycle_alignment: Orb::Models::SubscriptionSchedulePlanChangeParams::billing_cycle_alignment?,
        billing_cycle_anchor_configuration: Orb::Models::BillingCycleAnchorConfigurationModel?,
        change_date: Time?,
        coupon_redemption_code: String?,
        credits_overage_rate: Float?,
        default_invoice_memo: String?,
        external_plan_id: String?,
        filter: String?,
        initial_phase_order: Integer?,
        invoicing_threshold: String?,
        net_terms: Integer?,
        per_credit_overage_amount: Float?,
        plan_id: String?,
        plan_version_number: Integer?,
        price_overrides: ::Array[top]?,
        remove_adjustments: ::Array[Orb::Models::RemoveSubscriptionAdjustmentParams]?,
        remove_prices: ::Array[Orb::Models::RemoveSubscriptionPriceParams]?,
        replace_adjustments: ::Array[Orb::Models::ReplaceSubscriptionAdjustmentParams]?,
        replace_prices: ::Array[Orb::Models::ReplaceSubscriptionPriceParams]?,
        trial_duration_days: Integer?,
        usage_customer_ids: ::Array[String]?
      }
      & Orb::request_parameters

    class SubscriptionSchedulePlanChangeParams < Orb::BaseModel
      extend Orb::RequestParameters::Converter
      include Orb::RequestParameters

      attr_accessor change_option: Orb::Models::SubscriptionSchedulePlanChangeParams::change_option

      attr_accessor add_adjustments: ::Array[Orb::Models::AddSubscriptionAdjustmentParams]?

      attr_accessor add_prices: ::Array[Orb::Models::AddSubscriptionPriceParams]?

      attr_accessor align_billing_with_plan_change_date: bool?

      attr_accessor auto_collection: bool?

      attr_accessor billing_cycle_alignment: Orb::Models::SubscriptionSchedulePlanChangeParams::billing_cycle_alignment?

      attr_accessor billing_cycle_anchor_configuration: Orb::Models::BillingCycleAnchorConfigurationModel?

      attr_accessor change_date: Time?

      attr_accessor coupon_redemption_code: String?

      attr_accessor credits_overage_rate: Float?

      attr_accessor default_invoice_memo: String?

      attr_accessor external_plan_id: String?

      attr_accessor filter: String?

      attr_accessor initial_phase_order: Integer?

      attr_accessor invoicing_threshold: String?

      attr_accessor net_terms: Integer?

      attr_accessor per_credit_overage_amount: Float?

      attr_accessor plan_id: String?

      attr_accessor plan_version_number: Integer?

      attr_accessor price_overrides: ::Array[top]?

      attr_accessor remove_adjustments: ::Array[Orb::Models::RemoveSubscriptionAdjustmentParams]?

      attr_accessor remove_prices: ::Array[Orb::Models::RemoveSubscriptionPriceParams]?

      attr_accessor replace_adjustments: ::Array[Orb::Models::ReplaceSubscriptionAdjustmentParams]?

      attr_accessor replace_prices: ::Array[Orb::Models::ReplaceSubscriptionPriceParams]?

      attr_accessor trial_duration_days: Integer?

      attr_accessor usage_customer_ids: ::Array[String]?

      def initialize:
        (
          change_option: Orb::Models::SubscriptionSchedulePlanChangeParams::change_option,
          add_adjustments: ::Array[Orb::Models::AddSubscriptionAdjustmentParams]?,
          add_prices: ::Array[Orb::Models::AddSubscriptionPriceParams]?,
          align_billing_with_plan_change_date: bool?,
          auto_collection: bool?,
          billing_cycle_alignment: Orb::Models::SubscriptionSchedulePlanChangeParams::billing_cycle_alignment?,
          billing_cycle_anchor_configuration: Orb::Models::BillingCycleAnchorConfigurationModel?,
          change_date: Time?,
          coupon_redemption_code: String?,
          credits_overage_rate: Float?,
          default_invoice_memo: String?,
          external_plan_id: String?,
          filter: String?,
          initial_phase_order: Integer?,
          invoicing_threshold: String?,
          net_terms: Integer?,
          per_credit_overage_amount: Float?,
          plan_id: String?,
          plan_version_number: Integer?,
          price_overrides: ::Array[top]?,
          remove_adjustments: ::Array[Orb::Models::RemoveSubscriptionAdjustmentParams]?,
          remove_prices: ::Array[Orb::Models::RemoveSubscriptionPriceParams]?,
          replace_adjustments: ::Array[Orb::Models::ReplaceSubscriptionAdjustmentParams]?,
          replace_prices: ::Array[Orb::Models::ReplaceSubscriptionPriceParams]?,
          trial_duration_days: Integer?,
          usage_customer_ids: ::Array[String]?,
          request_options: Orb::request_opts
        ) -> void
        | (
          ?Orb::Models::subscription_schedule_plan_change_params
          | Orb::BaseModel data
        ) -> void

      def to_hash: -> Orb::Models::subscription_schedule_plan_change_params

      type change_option =
        :requested_date | :end_of_subscription_term | :immediate

      class ChangeOption < Orb::Enum
        REQUESTED_DATE: :requested_date
        END_OF_SUBSCRIPTION_TERM: :end_of_subscription_term
        IMMEDIATE: :immediate

        def self.values: -> ::Array[Orb::Models::SubscriptionSchedulePlanChangeParams::change_option]
      end

      type billing_cycle_alignment =
        :unchanged | :plan_change_date | :start_of_month

      class BillingCycleAlignment < Orb::Enum
        UNCHANGED: :unchanged
        PLAN_CHANGE_DATE: :plan_change_date
        START_OF_MONTH: :start_of_month

        def self.values: -> ::Array[Orb::Models::SubscriptionSchedulePlanChangeParams::billing_cycle_alignment]
      end
    end
  end
end
