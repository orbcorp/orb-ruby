module Orb
  module Models
    type price_evaluate_preview_events_response =
      { data: ::Array[Orb::Models::PriceEvaluatePreviewEventsResponse::Data] }

    class PriceEvaluatePreviewEventsResponse < Orb::Internal::Type::BaseModel
      attr_accessor data: ::Array[Orb::Models::PriceEvaluatePreviewEventsResponse::Data]

      def initialize: (
        data: ::Array[Orb::Models::PriceEvaluatePreviewEventsResponse::Data]
      ) -> void

      def to_hash: -> {
        data: ::Array[Orb::Models::PriceEvaluatePreviewEventsResponse::Data]
      }

      type data =
        {
          currency: String,
          price_groups: ::Array[Orb::EvaluatePriceGroup],
          inline_price_index: Integer?,
          price_id: String?
        }

      class Data < Orb::Internal::Type::BaseModel
        attr_accessor currency: String

        attr_accessor price_groups: ::Array[Orb::EvaluatePriceGroup]

        attr_accessor inline_price_index: Integer?

        attr_accessor price_id: String?

        def initialize: (
          currency: String,
          price_groups: ::Array[Orb::EvaluatePriceGroup],
          ?inline_price_index: Integer?,
          ?price_id: String?
        ) -> void

        def to_hash: -> {
          currency: String,
          price_groups: ::Array[Orb::EvaluatePriceGroup],
          inline_price_index: Integer?,
          price_id: String?
        }
      end
    end
  end
end
