module Orb
  module Models
    type adjustment_interval_model =
      {
        id: String,
        adjustment: Orb::Models::adjustment_model,
        applies_to_price_interval_ids: ::Array[String],
        end_date: Time?,
        start_date: Time
      }

    class AdjustmentIntervalModel < Orb::BaseModel
      attr_accessor id: String

      attr_accessor adjustment: Orb::Models::adjustment_model

      attr_accessor applies_to_price_interval_ids: ::Array[String]

      attr_accessor end_date: Time?

      attr_accessor start_date: Time

      def initialize:
        (
          id: String,
          adjustment: Orb::Models::adjustment_model,
          applies_to_price_interval_ids: ::Array[String],
          end_date: Time?,
          start_date: Time
        ) -> void
        | (
          ?Orb::Models::adjustment_interval_model | Orb::BaseModel data
        ) -> void

      def to_hash: -> Orb::Models::adjustment_interval_model
    end
  end
end
