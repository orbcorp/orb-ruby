module Orb
  module Models
    type tiered_config_model =
      { tiers: ::Array[Orb::Models::TieredConfigModel::Tier] }

    class TieredConfigModel < Orb::BaseModel
      attr_accessor tiers: ::Array[Orb::Models::TieredConfigModel::Tier]

      def initialize:
        (tiers: ::Array[Orb::Models::TieredConfigModel::Tier]) -> void
        | (?Orb::Models::tiered_config_model | Orb::BaseModel data) -> void

      def to_hash: -> Orb::Models::tiered_config_model

      type tier = { first_unit: Float, unit_amount: String, last_unit: Float? }

      class Tier < Orb::BaseModel
        attr_accessor first_unit: Float

        attr_accessor unit_amount: String

        attr_accessor last_unit: Float?

        def initialize:
          (first_unit: Float, unit_amount: String, last_unit: Float?) -> void
          | (
            ?Orb::Models::TieredConfigModel::tier | Orb::BaseModel data
          ) -> void

        def to_hash: -> Orb::Models::TieredConfigModel::tier
      end
    end
  end
end
