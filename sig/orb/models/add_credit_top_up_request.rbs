module Orb
  module Models
    type add_credit_top_up_request =
      {
        amount: String,
        currency: String,
        invoice_settings: Orb::Models::AddCreditTopUpRequest::InvoiceSettings,
        per_unit_cost_basis: String,
        threshold: String,
        active_from: Time?,
        expires_after: Integer?,
        expires_after_unit: Orb::Models::AddCreditTopUpRequest::expires_after_unit?
      }

    class AddCreditTopUpRequest < Orb::BaseModel
      attr_accessor amount: String

      attr_accessor currency: String

      attr_accessor invoice_settings: Orb::Models::AddCreditTopUpRequest::InvoiceSettings

      attr_accessor per_unit_cost_basis: String

      attr_accessor threshold: String

      attr_accessor active_from: Time?

      attr_accessor expires_after: Integer?

      attr_accessor expires_after_unit: Orb::Models::AddCreditTopUpRequest::expires_after_unit?

      def initialize:
        (
          amount: String,
          currency: String,
          invoice_settings: Orb::Models::AddCreditTopUpRequest::InvoiceSettings,
          per_unit_cost_basis: String,
          threshold: String,
          active_from: Time?,
          expires_after: Integer?,
          expires_after_unit: Orb::Models::AddCreditTopUpRequest::expires_after_unit?
        ) -> void
        | (
          ?Orb::Models::add_credit_top_up_request | Orb::BaseModel data
        ) -> void

      def to_hash: -> Orb::Models::add_credit_top_up_request

      type invoice_settings =
        {
          auto_collection: bool,
          net_terms: Integer,
          memo: String?,
          require_successful_payment: bool
        }

      class InvoiceSettings < Orb::BaseModel
        attr_accessor auto_collection: bool

        attr_accessor net_terms: Integer

        attr_accessor memo: String?

        attr_reader require_successful_payment: bool?

        def require_successful_payment=: (bool) -> bool

        def initialize:
          (
            auto_collection: bool,
            net_terms: Integer,
            memo: String?,
            require_successful_payment: bool
          ) -> void
          | (
            ?Orb::Models::AddCreditTopUpRequest::invoice_settings
            | Orb::BaseModel data
          ) -> void

        def to_hash: -> Orb::Models::AddCreditTopUpRequest::invoice_settings
      end

      type expires_after_unit = :day | :month

      class ExpiresAfterUnit < Orb::Enum
        DAY: :day
        MONTH: :month

        def self.values: -> ::Array[Orb::Models::AddCreditTopUpRequest::expires_after_unit]
      end
    end
  end
end
