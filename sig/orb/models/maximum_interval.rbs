module Orb
  module Models
    type maximum_interval =
      {
        applies_to_price_interval_ids: ::Array[String],
        end_date: Time?,
        filters: ::Array[Orb::TransformPriceFilter],
        maximum_amount: String,
        start_date: Time
      }

    class MaximumInterval < Orb::Internal::Type::BaseModel
      attr_accessor applies_to_price_interval_ids: ::Array[String]

      attr_accessor end_date: Time?

      attr_accessor filters: ::Array[Orb::TransformPriceFilter]

      attr_accessor maximum_amount: String

      attr_accessor start_date: Time

      def initialize: (
        applies_to_price_interval_ids: ::Array[String],
        end_date: Time?,
        filters: ::Array[Orb::TransformPriceFilter],
        maximum_amount: String,
        start_date: Time
      ) -> void

      def to_hash: -> {
        applies_to_price_interval_ids: ::Array[String],
        end_date: Time?,
        filters: ::Array[Orb::TransformPriceFilter],
        maximum_amount: String,
        start_date: Time
      }
    end
  end
end
