module Orb
  module Models
    type invoice_line_item_create_response =
      {
        id: String,
        adjusted_subtotal: String,
        adjustments: ::Array[Orb::Models::InvoiceLineItemCreateResponse::adjustment],
        amount: String,
        credits_applied: String,
        discount: Orb::Models::discount?,
        end_date: Time,
        filter: String?,
        grouping: String?,
        maximum: Orb::Maximum?,
        maximum_amount: String?,
        minimum: Orb::Minimum?,
        minimum_amount: String?,
        name: String,
        partially_invoiced_amount: String,
        price: Orb::Models::price,
        quantity: Float,
        start_date: Time,
        sub_line_items: ::Array[Orb::Models::InvoiceLineItemCreateResponse::sub_line_item],
        subtotal: String,
        tax_amounts: ::Array[Orb::TaxAmount],
        usage_customer_ids: ::Array[String]?
      }

    class InvoiceLineItemCreateResponse < Orb::Internal::Type::BaseModel
      attr_accessor id: String

      attr_accessor adjusted_subtotal: String

      attr_accessor adjustments: ::Array[Orb::Models::InvoiceLineItemCreateResponse::adjustment]

      attr_accessor amount: String

      attr_accessor credits_applied: String

      attr_accessor discount: Orb::Models::discount?

      attr_accessor end_date: Time

      attr_accessor filter: String?

      attr_accessor grouping: String?

      attr_accessor maximum: Orb::Maximum?

      attr_accessor maximum_amount: String?

      attr_accessor minimum: Orb::Minimum?

      attr_accessor minimum_amount: String?

      attr_accessor name: String

      attr_accessor partially_invoiced_amount: String

      attr_accessor price: Orb::Models::price

      attr_accessor quantity: Float

      attr_accessor start_date: Time

      attr_accessor sub_line_items: ::Array[Orb::Models::InvoiceLineItemCreateResponse::sub_line_item]

      attr_accessor subtotal: String

      attr_accessor tax_amounts: ::Array[Orb::TaxAmount]

      attr_accessor usage_customer_ids: ::Array[String]?

      def initialize: (
        id: String,
        adjusted_subtotal: String,
        adjustments: ::Array[Orb::Models::InvoiceLineItemCreateResponse::adjustment],
        amount: String,
        credits_applied: String,
        discount: Orb::Models::discount?,
        end_date: Time,
        filter: String?,
        grouping: String?,
        maximum: Orb::Maximum?,
        maximum_amount: String?,
        minimum: Orb::Minimum?,
        minimum_amount: String?,
        name: String,
        partially_invoiced_amount: String,
        price: Orb::Models::price,
        quantity: Float,
        start_date: Time,
        sub_line_items: ::Array[Orb::Models::InvoiceLineItemCreateResponse::sub_line_item],
        subtotal: String,
        tax_amounts: ::Array[Orb::TaxAmount],
        usage_customer_ids: ::Array[String]?
      ) -> void

      def to_hash: -> {
        id: String,
        adjusted_subtotal: String,
        adjustments: ::Array[Orb::Models::InvoiceLineItemCreateResponse::adjustment],
        amount: String,
        credits_applied: String,
        discount: Orb::Models::discount?,
        end_date: Time,
        filter: String?,
        grouping: String?,
        maximum: Orb::Maximum?,
        maximum_amount: String?,
        minimum: Orb::Minimum?,
        minimum_amount: String?,
        name: String,
        partially_invoiced_amount: String,
        price: Orb::Models::price,
        quantity: Float,
        start_date: Time,
        sub_line_items: ::Array[Orb::Models::InvoiceLineItemCreateResponse::sub_line_item],
        subtotal: String,
        tax_amounts: ::Array[Orb::TaxAmount],
        usage_customer_ids: ::Array[String]?
      }

      type adjustment =
        Orb::MonetaryUsageDiscountAdjustment
        | Orb::MonetaryAmountDiscountAdjustment
        | Orb::MonetaryPercentageDiscountAdjustment
        | Orb::MonetaryMinimumAdjustment
        | Orb::MonetaryMaximumAdjustment

      module Adjustment
        extend Orb::Internal::Type::Union

        def self?.variants: -> ::Array[Orb::Models::InvoiceLineItemCreateResponse::adjustment]
      end

      type sub_line_item =
        Orb::MatrixSubLineItem | Orb::TierSubLineItem | Orb::OtherSubLineItem

      module SubLineItem
        extend Orb::Internal::Type::Union

        def self?.variants: -> ::Array[Orb::Models::InvoiceLineItemCreateResponse::sub_line_item]
      end
    end
  end
end
