module Orb
  module Models
    type item =
      {
        id: String,
        created_at: Time,
        external_connections: ::Array[Orb::Models::ItemExternalConnectionModel],
        name: String
      }

    class Item < Orb::BaseModel
      attr_accessor id: String

      attr_accessor created_at: Time

      attr_accessor external_connections: ::Array[Orb::Models::ItemExternalConnectionModel]

      attr_accessor name: String

      def initialize:
        (
          id: String,
          created_at: Time,
          external_connections: ::Array[Orb::Models::ItemExternalConnectionModel],
          name: String
        ) -> void
        | (?Orb::Models::item | Orb::BaseModel data) -> void

      def to_hash: -> Orb::Models::item
    end
  end
end
