module Orb
  module Models
    type alert_update_params =
      { thresholds: Array[Orb::Models::AlertUpdateParams::Threshold] }
      & Orb::request_parameters

    class AlertUpdateParams < Orb::BaseModel
      extend Orb::RequestParameters::Converter
      include Orb::RequestParameters

      attr_accessor thresholds: Array[Orb::Models::AlertUpdateParams::Threshold]

      def initialize:
        (
          thresholds: Array[Orb::Models::AlertUpdateParams::Threshold],
          request_options: Orb::request_opts
        ) -> void
        | (?Orb::Models::alert_update_params | Orb::BaseModel data) -> void

      def to_h: -> Orb::Models::alert_update_params

      type threshold = { value: Float }

      class Threshold < Orb::BaseModel
        attr_accessor value: Float

        def initialize:
          (value: Float) -> void
          | (
            ?Orb::Models::AlertUpdateParams::threshold | Orb::BaseModel data
          ) -> void

        def to_h: -> Orb::Models::AlertUpdateParams::threshold
      end
    end
  end
end
