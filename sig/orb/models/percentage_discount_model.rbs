module Orb
  module Models
    type percentage_discount_model =
      {
        applies_to_price_ids: ::Array[String],
        discount_type: Orb::Models::PercentageDiscountModel::discount_type,
        percentage_discount: Float,
        reason: String?
      }

    class PercentageDiscountModel < Orb::BaseModel
      attr_accessor applies_to_price_ids: ::Array[String]

      attr_accessor discount_type: Orb::Models::PercentageDiscountModel::discount_type

      attr_accessor percentage_discount: Float

      attr_accessor reason: String?

      def initialize:
        (
          applies_to_price_ids: ::Array[String],
          discount_type: Orb::Models::PercentageDiscountModel::discount_type,
          percentage_discount: Float,
          reason: String?
        ) -> void
        | (
          ?Orb::Models::percentage_discount_model | Orb::BaseModel data
        ) -> void

      def to_hash: -> Orb::Models::percentage_discount_model

      type discount_type = :percentage

      class DiscountType < Orb::Enum
        PERCENTAGE: :percentage

        def self.values: -> ::Array[Orb::Models::PercentageDiscountModel::discount_type]
      end
    end
  end
end
