module Orb
  module Models
    type coupon_model =
      {
        id: String,
        archived_at: Time?,
        discount: Orb::Models::CouponModel::discount,
        duration_in_months: Integer?,
        max_redemptions: Integer?,
        redemption_code: String,
        times_redeemed: Integer
      }

    class CouponModel < Orb::BaseModel
      attr_accessor id: String

      attr_accessor archived_at: Time?

      attr_accessor discount: Orb::Models::CouponModel::discount

      attr_accessor duration_in_months: Integer?

      attr_accessor max_redemptions: Integer?

      attr_accessor redemption_code: String

      attr_accessor times_redeemed: Integer

      def initialize:
        (
          id: String,
          archived_at: Time?,
          discount: Orb::Models::CouponModel::discount,
          duration_in_months: Integer?,
          max_redemptions: Integer?,
          redemption_code: String,
          times_redeemed: Integer
        ) -> void
        | (?Orb::Models::coupon_model | Orb::BaseModel data) -> void

      def to_hash: -> Orb::Models::coupon_model

      type discount =
        Orb::Models::PercentageDiscount | Orb::Models::AmountDiscount

      class Discount < Orb::Union
        private def self.variants: -> [[:percentage, Orb::Models::PercentageDiscount], [:amount, Orb::Models::AmountDiscount]]
      end
    end
  end
end
