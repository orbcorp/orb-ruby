module Orb
  module Models
    type subscription_update_trial_params =
      {
        trial_end_date: Orb::Models::SubscriptionUpdateTrialParams::trial_end_date,
        shift: bool
      }
      & Orb::Internal::Type::request_parameters

    class SubscriptionUpdateTrialParams < Orb::Internal::Type::BaseModel
      extend Orb::Internal::Type::RequestParameters::Converter
      include Orb::Internal::Type::RequestParameters

      attr_accessor trial_end_date: Orb::Models::SubscriptionUpdateTrialParams::trial_end_date

      attr_reader shift: bool?

      def shift=: (bool) -> bool

      def initialize: (
        trial_end_date: Orb::Models::SubscriptionUpdateTrialParams::trial_end_date,
        ?shift: bool,
        ?request_options: Orb::request_opts
      ) -> void

      def to_hash: -> {
        trial_end_date: Orb::Models::SubscriptionUpdateTrialParams::trial_end_date,
        shift: bool,
        request_options: Orb::RequestOptions
      }

      type trial_end_date = Time | :immediate

      module TrialEndDate
        extend Orb::Internal::Type::Union

        def self?.variants: -> ::Array[Orb::Models::SubscriptionUpdateTrialParams::trial_end_date]

        IMMEDIATE: :immediate
      end
    end
  end
end
