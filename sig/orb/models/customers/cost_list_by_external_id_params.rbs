module Orb
  module Models
    module Customers
      type cost_list_by_external_id_params =
        {
          currency: String?,
          timeframe_end: Time?,
          timeframe_start: Time?,
          view_mode: Orb::Models::Customers::CostListByExternalIDParams::view_mode?
        }
        & Orb::request_parameters

      class CostListByExternalIDParams < Orb::BaseModel
        extend Orb::RequestParameters::Converter
        include Orb::RequestParameters

        attr_accessor currency: String?

        attr_accessor timeframe_end: Time?

        attr_accessor timeframe_start: Time?

        attr_accessor view_mode: Orb::Models::Customers::CostListByExternalIDParams::view_mode?

        def initialize: (
          ?currency: String?,
          ?timeframe_end: Time?,
          ?timeframe_start: Time?,
          ?view_mode: Orb::Models::Customers::CostListByExternalIDParams::view_mode?,
          ?request_options: Orb::request_opts
        ) -> void

        def to_hash: -> Orb::Models::Customers::cost_list_by_external_id_params

        type view_mode = :periodic | :cumulative

        class ViewMode < Orb::Enum
          PERIODIC: :periodic
          CUMULATIVE: :cumulative

          def self.values: -> ::Array[Orb::Models::Customers::CostListByExternalIDParams::view_mode]
        end
      end
    end
  end
end
