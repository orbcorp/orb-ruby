module Orb
  module Models
    module Customers
      type balance_transaction_list_params =
        {
          cursor: String?,
          limit: Integer,
          operation_time_gt: Time?,
          operation_time_gte: Time?,
          operation_time_lt: Time?,
          operation_time_lte: Time?
        }
        & Orb::Internal::Type::request_parameters

      class BalanceTransactionListParams < Orb::Internal::Type::BaseModel
        extend Orb::Internal::Type::RequestParameters::Converter
        include Orb::Internal::Type::RequestParameters

        attr_accessor cursor: String?

        attr_reader limit: Integer?

        def limit=: (Integer) -> Integer

        attr_accessor operation_time_gt: Time?

        attr_accessor operation_time_gte: Time?

        attr_accessor operation_time_lt: Time?

        attr_accessor operation_time_lte: Time?

        def initialize: (
          ?cursor: String?,
          ?limit: Integer,
          ?operation_time_gt: Time?,
          ?operation_time_gte: Time?,
          ?operation_time_lt: Time?,
          ?operation_time_lte: Time?,
          ?request_options: Orb::request_opts
        ) -> void

        def to_hash: -> Orb::Models::Customers::balance_transaction_list_params
      end
    end
  end
end
