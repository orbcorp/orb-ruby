module Orb
  module Models
    type subscription_cancel_params =
      {
        cancel_option: Orb::Models::SubscriptionCancelParams::cancel_option,
        allow_invoice_credit_or_void: bool?,
        cancellation_date: Time?
      }
      & Orb::Internal::Type::request_parameters

    class SubscriptionCancelParams < Orb::Internal::Type::BaseModel
      extend Orb::Internal::Type::RequestParameters::Converter
      include Orb::Internal::Type::RequestParameters

      attr_accessor cancel_option: Orb::Models::SubscriptionCancelParams::cancel_option

      attr_accessor allow_invoice_credit_or_void: bool?

      attr_accessor cancellation_date: Time?

      def initialize: (
        cancel_option: Orb::Models::SubscriptionCancelParams::cancel_option,
        ?allow_invoice_credit_or_void: bool?,
        ?cancellation_date: Time?,
        ?request_options: Orb::request_opts
      ) -> void

      def to_hash: -> Orb::Models::subscription_cancel_params

      type cancel_option =
        :end_of_subscription_term | :immediate | :requested_date

      module CancelOption
        extend Orb::Internal::Type::Enum

        END_OF_SUBSCRIPTION_TERM: :end_of_subscription_term
        IMMEDIATE: :immediate
        REQUESTED_DATE: :requested_date

        def self?.values: -> ::Array[Orb::Models::SubscriptionCancelParams::cancel_option]
      end
    end
  end
end
