module Orb
  module Models
    type coupon =
      {
        id: String,
        archived_at: Time?,
        discount: Orb::Coupon::discount,
        duration_in_months: Integer?,
        max_redemptions: Integer?,
        redemption_code: String,
        times_redeemed: Integer
      }

    class Coupon < Orb::Internal::Type::BaseModel
      attr_accessor id: String

      attr_accessor archived_at: Time?

      attr_accessor discount: Orb::Coupon::discount

      attr_accessor duration_in_months: Integer?

      attr_accessor max_redemptions: Integer?

      attr_accessor redemption_code: String

      attr_accessor times_redeemed: Integer

      def initialize: (
        id: String,
        archived_at: Time?,
        discount: Orb::Coupon::discount,
        duration_in_months: Integer?,
        max_redemptions: Integer?,
        redemption_code: String,
        times_redeemed: Integer
      ) -> void

      type discount = Orb::PercentageDiscount | Orb::AmountDiscount

      module Discount
        extend Orb::Internal::Type::Union

        def self?.variants: -> ::Array[Orb::Coupon::discount]
      end
    end
  end
end
