module Orb
  module Resources
    class Customers
      attr_reader costs: Orb::Resources::Customers::Costs

      attr_reader credits: Orb::Resources::Customers::Credits

      attr_reader balance_transactions: Orb::Resources::Customers::BalanceTransactions

      def create: (
        email: String,
        name: String,
        ?accounting_sync_configuration: Orb::NewAccountingSyncConfiguration?,
        ?additional_emails: ::Array[String]?,
        ?auto_collection: bool?,
        ?billing_address: Orb::AddressInput?,
        ?currency: String?,
        ?email_delivery: bool?,
        ?external_customer_id: String?,
        ?hierarchy: Orb::CustomerHierarchyConfig?,
        ?metadata: ::Hash[Symbol, String?]?,
        ?payment_provider: Orb::Models::CustomerCreateParams::payment_provider?,
        ?payment_provider_id: String?,
        ?reporting_configuration: Orb::NewReportingConfiguration?,
        ?shipping_address: Orb::AddressInput?,
        ?tax_configuration: Orb::Models::CustomerCreateParams::tax_configuration?,
        ?tax_id: Orb::CustomerTaxID?,
        ?timezone: String?,
        ?request_options: Orb::request_opts
      ) -> Orb::Customer

      def update: (
        String customer_id,
        ?accounting_sync_configuration: Orb::NewAccountingSyncConfiguration?,
        ?additional_emails: ::Array[String]?,
        ?auto_collection: bool?,
        ?billing_address: Orb::AddressInput?,
        ?currency: String?,
        ?email: String?,
        ?email_delivery: bool?,
        ?external_customer_id: String?,
        ?hierarchy: Orb::CustomerHierarchyConfig?,
        ?metadata: ::Hash[Symbol, String?]?,
        ?name: String?,
        ?payment_provider: Orb::Models::CustomerUpdateParams::payment_provider?,
        ?payment_provider_id: String?,
        ?reporting_configuration: Orb::NewReportingConfiguration?,
        ?shipping_address: Orb::AddressInput?,
        ?tax_configuration: Orb::Models::CustomerUpdateParams::tax_configuration?,
        ?tax_id: Orb::CustomerTaxID?,
        ?request_options: Orb::request_opts
      ) -> Orb::Customer

      def list: (
        ?created_at_gt: Time?,
        ?created_at_gte: Time?,
        ?created_at_lt: Time?,
        ?created_at_lte: Time?,
        ?cursor: String?,
        ?limit: Integer,
        ?request_options: Orb::request_opts
      ) -> Orb::Internal::Page[Orb::Customer]

      def delete: (
        String customer_id,
        ?request_options: Orb::request_opts
      ) -> nil

      def fetch: (
        String customer_id,
        ?request_options: Orb::request_opts
      ) -> Orb::Customer

      def fetch_by_external_id: (
        String external_customer_id,
        ?request_options: Orb::request_opts
      ) -> Orb::Customer

      def sync_payment_methods_from_gateway: (
        String customer_id,
        ?request_options: Orb::request_opts
      ) -> nil

      def sync_payment_methods_from_gateway_by_external_customer_id: (
        String external_customer_id,
        ?request_options: Orb::request_opts
      ) -> nil

      def update_by_external_id: (
        String id,
        ?accounting_sync_configuration: Orb::NewAccountingSyncConfiguration?,
        ?additional_emails: ::Array[String]?,
        ?auto_collection: bool?,
        ?billing_address: Orb::AddressInput?,
        ?currency: String?,
        ?email: String?,
        ?email_delivery: bool?,
        ?external_customer_id: String?,
        ?hierarchy: Orb::CustomerHierarchyConfig?,
        ?metadata: ::Hash[Symbol, String?]?,
        ?name: String?,
        ?payment_provider: Orb::Models::CustomerUpdateByExternalIDParams::payment_provider?,
        ?payment_provider_id: String?,
        ?reporting_configuration: Orb::NewReportingConfiguration?,
        ?shipping_address: Orb::AddressInput?,
        ?tax_configuration: Orb::Models::CustomerUpdateByExternalIDParams::tax_configuration?,
        ?tax_id: Orb::CustomerTaxID?,
        ?request_options: Orb::request_opts
      ) -> Orb::Customer

      def initialize: (client: Orb::Client) -> void
    end
  end
end
