module Orb
  module Resources
    class Customers
      attr_reader costs: Orb::Resources::Customers::Costs

      attr_reader credits: Orb::Resources::Customers::Credits

      attr_reader balance_transactions: Orb::Resources::Customers::BalanceTransactions

      def create:
        (
          Orb::Models::CustomerCreateParams | ::Hash[Symbol, top] params
        ) -> Orb::Models::Customer
        | (
          email: String,
          name: String,
          accounting_sync_configuration: Orb::Models::CustomerCreateParams::AccountingSyncConfiguration?,
          additional_emails: ::Array[String]?,
          auto_collection: bool?,
          billing_address: Orb::Models::CustomerCreateParams::BillingAddress?,
          currency: String?,
          email_delivery: bool?,
          external_customer_id: String?,
          metadata: ::Hash[Symbol, String?]?,
          payment_provider: Orb::Models::CustomerCreateParams::payment_provider?,
          payment_provider_id: String?,
          reporting_configuration: Orb::Models::CustomerCreateParams::ReportingConfiguration?,
          shipping_address: Orb::Models::CustomerCreateParams::ShippingAddress?,
          tax_configuration: Orb::Models::CustomerCreateParams::tax_configuration?,
          tax_id: Orb::Models::CustomerCreateParams::TaxID?,
          timezone: String?,
          request_options: Orb::request_opts
        ) -> Orb::Models::Customer

      def update:
        (
          String customer_id,
          ?Orb::Models::CustomerUpdateParams | ::Hash[Symbol, top] params
        ) -> Orb::Models::Customer
        | (
          String customer_id,
          accounting_sync_configuration: Orb::Models::CustomerUpdateParams::AccountingSyncConfiguration?,
          additional_emails: ::Array[String]?,
          auto_collection: bool?,
          billing_address: Orb::Models::CustomerUpdateParams::BillingAddress?,
          currency: String?,
          email: String?,
          email_delivery: bool?,
          external_customer_id: String?,
          metadata: ::Hash[Symbol, String?]?,
          name: String?,
          payment_provider: Orb::Models::CustomerUpdateParams::payment_provider?,
          payment_provider_id: String?,
          reporting_configuration: Orb::Models::CustomerUpdateParams::ReportingConfiguration?,
          shipping_address: Orb::Models::CustomerUpdateParams::ShippingAddress?,
          tax_configuration: Orb::Models::CustomerUpdateParams::tax_configuration?,
          tax_id: Orb::Models::CustomerUpdateParams::TaxID?,
          request_options: Orb::request_opts
        ) -> Orb::Models::Customer

      def list:
        (
          ?Orb::Models::CustomerListParams | ::Hash[Symbol, top] params
        ) -> Orb::Page[Orb::Models::Customer]
        | (
          created_at_gt: Time?,
          created_at_gte: Time?,
          created_at_lt: Time?,
          created_at_lte: Time?,
          cursor: String?,
          limit: Integer,
          request_options: Orb::request_opts
        ) -> Orb::Page[Orb::Models::Customer]

      def delete:
        (
          String customer_id,
          ?Orb::Models::CustomerDeleteParams | ::Hash[Symbol, top] params
        ) -> nil
        | (String customer_id, request_options: Orb::request_opts) -> nil

      def fetch:
        (
          String customer_id,
          ?Orb::Models::CustomerFetchParams | ::Hash[Symbol, top] params
        ) -> Orb::Models::Customer
        | (
          String customer_id,
          request_options: Orb::request_opts
        ) -> Orb::Models::Customer

      def fetch_by_external_id:
        (
          String external_customer_id,
          ?Orb::Models::CustomerFetchByExternalIDParams
          | ::Hash[Symbol, top] params
        ) -> Orb::Models::Customer
        | (
          String external_customer_id,
          request_options: Orb::request_opts
        ) -> Orb::Models::Customer

      def sync_payment_methods_from_gateway:
        (
          String external_customer_id,
          ?Orb::Models::CustomerSyncPaymentMethodsFromGatewayParams
          | ::Hash[Symbol, top] params
        ) -> nil
        | (
          String external_customer_id,
          request_options: Orb::request_opts
        ) -> nil

      def sync_payment_methods_from_gateway_by_external_customer_id:
        (
          String customer_id,
          ?Orb::Models::CustomerSyncPaymentMethodsFromGatewayByExternalCustomerIDParams
          | ::Hash[Symbol, top] params
        ) -> nil
        | (String customer_id, request_options: Orb::request_opts) -> nil

      def update_by_external_id:
        (
          String id,
          ?Orb::Models::CustomerUpdateByExternalIDParams
          | ::Hash[Symbol, top] params
        ) -> Orb::Models::Customer
        | (
          String id,
          accounting_sync_configuration: Orb::Models::CustomerUpdateByExternalIDParams::AccountingSyncConfiguration?,
          additional_emails: ::Array[String]?,
          auto_collection: bool?,
          billing_address: Orb::Models::CustomerUpdateByExternalIDParams::BillingAddress?,
          currency: String?,
          email: String?,
          email_delivery: bool?,
          external_customer_id: String?,
          metadata: ::Hash[Symbol, String?]?,
          name: String?,
          payment_provider: Orb::Models::CustomerUpdateByExternalIDParams::payment_provider?,
          payment_provider_id: String?,
          reporting_configuration: Orb::Models::CustomerUpdateByExternalIDParams::ReportingConfiguration?,
          shipping_address: Orb::Models::CustomerUpdateByExternalIDParams::ShippingAddress?,
          tax_configuration: Orb::Models::CustomerUpdateByExternalIDParams::tax_configuration?,
          tax_id: Orb::Models::CustomerUpdateByExternalIDParams::TaxID?,
          request_options: Orb::request_opts
        ) -> Orb::Models::Customer

      def initialize: (client: Orb::Client) -> void
    end
  end
end
