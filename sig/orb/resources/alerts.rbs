module Orb
  module Resources
    class Alerts
      def retrieve:
        (
          String alert_id,
          ?Orb::Models::AlertRetrieveParams | ::Hash[Symbol, top] params
        ) -> Orb::Models::AlertModel
        | (
          String alert_id,
          request_options: Orb::request_opts
        ) -> Orb::Models::AlertModel

      def update:
        (
          String alert_configuration_id,
          Orb::Models::AlertUpdateParams | ::Hash[Symbol, top] params
        ) -> Orb::Models::AlertModel
        | (
          String alert_configuration_id,
          thresholds: ::Array[Orb::Models::ThresholdModel],
          request_options: Orb::request_opts
        ) -> Orb::Models::AlertModel

      def list:
        (
          ?Orb::Models::AlertListParams | ::Hash[Symbol, top] params
        ) -> Orb::Page[Orb::Models::AlertModel]
        | (
          created_at_gt: Time?,
          created_at_gte: Time?,
          created_at_lt: Time?,
          created_at_lte: Time?,
          cursor: String?,
          customer_id: String?,
          external_customer_id: String?,
          limit: Integer,
          subscription_id: String?,
          request_options: Orb::request_opts
        ) -> Orb::Page[Orb::Models::AlertModel]

      def create_for_customer:
        (
          String customer_id,
          Orb::Models::AlertCreateForCustomerParams | ::Hash[Symbol, top] params
        ) -> Orb::Models::AlertModel
        | (
          String customer_id,
          currency: String,
          type: Orb::Models::CreateCustomerAlertRequest::type_,
          thresholds: ::Array[Orb::Models::ThresholdModel]?,
          request_options: Orb::request_opts
        ) -> Orb::Models::AlertModel

      def create_for_external_customer:
        (
          String external_customer_id,
          Orb::Models::AlertCreateForExternalCustomerParams
          | ::Hash[Symbol, top] params
        ) -> Orb::Models::AlertModel
        | (
          String external_customer_id,
          currency: String,
          type: Orb::Models::CreateCustomerAlertRequest::type_,
          thresholds: ::Array[Orb::Models::ThresholdModel]?,
          request_options: Orb::request_opts
        ) -> Orb::Models::AlertModel

      def create_for_subscription:
        (
          String subscription_id,
          Orb::Models::AlertCreateForSubscriptionParams
          | ::Hash[Symbol, top] params
        ) -> Orb::Models::AlertModel
        | (
          String subscription_id,
          thresholds: ::Array[Orb::Models::ThresholdModel],
          type: Orb::Models::AlertCreateForSubscriptionParams::type_,
          metric_id: String?,
          request_options: Orb::request_opts
        ) -> Orb::Models::AlertModel

      def disable:
        (
          String alert_configuration_id,
          ?Orb::Models::AlertDisableParams | ::Hash[Symbol, top] params
        ) -> Orb::Models::AlertModel
        | (
          String alert_configuration_id,
          subscription_id: String?,
          request_options: Orb::request_opts
        ) -> Orb::Models::AlertModel

      def enable:
        (
          String alert_configuration_id,
          ?Orb::Models::AlertEnableParams | ::Hash[Symbol, top] params
        ) -> Orb::Models::AlertModel
        | (
          String alert_configuration_id,
          subscription_id: String?,
          request_options: Orb::request_opts
        ) -> Orb::Models::AlertModel

      def initialize: (client: Orb::Client) -> void
    end
  end
end
