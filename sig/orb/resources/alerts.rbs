module Orb
  module Resources
    class Alerts
      def retrieve: (
        String alert_id,
        ?request_options: Orb::request_opts
      ) -> Orb::Alert

      def update: (
        String alert_configuration_id,
        thresholds: ::Array[Orb::Threshold],
        ?request_options: Orb::request_opts
      ) -> Orb::Alert

      def list: (
        ?created_at_gt: Time?,
        ?created_at_gte: Time?,
        ?created_at_lt: Time?,
        ?created_at_lte: Time?,
        ?cursor: String?,
        ?customer_id: String?,
        ?external_customer_id: String?,
        ?limit: Integer,
        ?subscription_id: String?,
        ?request_options: Orb::request_opts
      ) -> Orb::Internal::Page[Orb::Alert]

      def create_for_customer: (
        String customer_id,
        currency: String,
        type: Orb::Models::AlertCreateForCustomerParams::type_,
        ?thresholds: ::Array[Orb::Threshold]?,
        ?request_options: Orb::request_opts
      ) -> Orb::Alert

      def create_for_external_customer: (
        String external_customer_id,
        currency: String,
        type: Orb::Models::AlertCreateForExternalCustomerParams::type_,
        ?thresholds: ::Array[Orb::Threshold]?,
        ?request_options: Orb::request_opts
      ) -> Orb::Alert

      def create_for_subscription: (
        String subscription_id,
        thresholds: ::Array[Orb::Threshold],
        type: Orb::Models::AlertCreateForSubscriptionParams::type_,
        ?metric_id: String?,
        ?request_options: Orb::request_opts
      ) -> Orb::Alert

      def disable: (
        String alert_configuration_id,
        ?subscription_id: String?,
        ?request_options: Orb::request_opts
      ) -> Orb::Alert

      def enable: (
        String alert_configuration_id,
        ?subscription_id: String?,
        ?request_options: Orb::request_opts
      ) -> Orb::Alert

      def initialize: (client: Orb::Client) -> void
    end
  end
end
