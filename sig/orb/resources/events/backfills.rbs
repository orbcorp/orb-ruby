module Orb
  module Resources
    class Events
      class Backfills
        def create:
          (
            Orb::Models::Events::BackfillCreateParams
            | ::Hash[Symbol, top] params
          ) -> Orb::Models::BackfillModel
          | (
            timeframe_end: Time,
            timeframe_start: Time,
            close_time: Time?,
            customer_id: String?,
            deprecation_filter: String?,
            external_customer_id: String?,
            replace_existing_events: bool,
            request_options: Orb::request_opts
          ) -> Orb::Models::BackfillModel

        def list:
          (
            ?Orb::Models::Events::BackfillListParams
            | ::Hash[Symbol, top] params
          ) -> Orb::Page[Orb::Models::BackfillModel]
          | (
            cursor: String?,
            limit: Integer,
            request_options: Orb::request_opts
          ) -> Orb::Page[Orb::Models::BackfillModel]

        def close:
          (
            String backfill_id,
            ?Orb::Models::Events::BackfillCloseParams
            | ::Hash[Symbol, top] params
          ) -> Orb::Models::BackfillModel
          | (
            String backfill_id,
            request_options: Orb::request_opts
          ) -> Orb::Models::BackfillModel

        def fetch:
          (
            String backfill_id,
            ?Orb::Models::Events::BackfillFetchParams
            | ::Hash[Symbol, top] params
          ) -> Orb::Models::BackfillModel
          | (
            String backfill_id,
            request_options: Orb::request_opts
          ) -> Orb::Models::BackfillModel

        def revert:
          (
            String backfill_id,
            ?Orb::Models::Events::BackfillRevertParams
            | ::Hash[Symbol, top] params
          ) -> Orb::Models::BackfillModel
          | (
            String backfill_id,
            request_options: Orb::request_opts
          ) -> Orb::Models::BackfillModel

        def initialize: (client: Orb::Client) -> void
      end
    end
  end
end
