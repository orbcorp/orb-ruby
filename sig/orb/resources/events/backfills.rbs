module Orb
  module Resources
    class Events
      class Backfills
        def create: (
          timeframe_end: Time,
          timeframe_start: Time,
          ?close_time: Time?,
          ?customer_id: String?,
          ?deprecation_filter: String?,
          ?external_customer_id: String?,
          ?replace_existing_events: bool,
          ?request_options: Orb::request_opts
        ) -> Orb::Models::Events::BackfillCreateResponse

        def list: (
          ?cursor: String?,
          ?limit: Integer,
          ?request_options: Orb::request_opts
        ) -> Orb::Internal::Page[Orb::Models::Events::BackfillListResponse]

        def close: (
          String backfill_id,
          ?request_options: Orb::request_opts
        ) -> Orb::Models::Events::BackfillCloseResponse

        def fetch: (
          String backfill_id,
          ?request_options: Orb::request_opts
        ) -> Orb::Models::Events::BackfillFetchResponse

        def revert: (
          String backfill_id,
          ?request_options: Orb::request_opts
        ) -> Orb::Models::Events::BackfillRevertResponse

        def initialize: (client: Orb::Client) -> void
      end
    end
  end
end
