module Orb
  module Resources
    class Customers
      class Credits
        class Ledger
          def list: (
            String customer_id,
            ?created_at_gt: Time?,
            ?created_at_gte: Time?,
            ?created_at_lt: Time?,
            ?created_at_lte: Time?,
            ?currency: String?,
            ?cursor: String?,
            ?entry_status: Orb::Models::Customers::Credits::LedgerListParams::entry_status?,
            ?entry_type: Orb::Models::Customers::Credits::LedgerListParams::entry_type?,
            ?limit: Integer,
            ?minimum_amount: String?,
            ?request_options: Orb::request_opts
          ) -> Orb::Internal::Page[Orb::Models::Customers::Credits::ledger_list_response]

          def create_entry: (
            String customer_id,
            amount: Float,
            entry_type: Orb::Models::Customers::Credits::LedgerCreateEntryParams::entry_type,
            target_expiry_date: Date,
            block_id: String,
            ?currency: String?,
            ?description: String?,
            ?effective_date: Time?,
            ?expiry_date: Time?,
            ?invoice_settings: Orb::Customers::Credits::LedgerCreateEntryParams::InvoiceSettings?,
            ?metadata: ::Hash[Symbol, String?]?,
            ?per_unit_cost_basis: String?,
            ?void_reason: Orb::Models::Customers::Credits::LedgerCreateEntryParams::void_reason?,
            ?request_options: Orb::request_opts
          ) -> Orb::Models::Customers::Credits::ledger_create_entry_response

          def create_entry_by_external_id: (
            String external_customer_id,
            amount: Float,
            entry_type: Orb::Models::Customers::Credits::LedgerCreateEntryByExternalIDParams::entry_type,
            target_expiry_date: Date,
            block_id: String,
            ?currency: String?,
            ?description: String?,
            ?effective_date: Time?,
            ?expiry_date: Time?,
            ?invoice_settings: Orb::Customers::Credits::LedgerCreateEntryByExternalIDParams::InvoiceSettings?,
            ?metadata: ::Hash[Symbol, String?]?,
            ?per_unit_cost_basis: String?,
            ?void_reason: Orb::Models::Customers::Credits::LedgerCreateEntryByExternalIDParams::void_reason?,
            ?request_options: Orb::request_opts
          ) -> Orb::Models::Customers::Credits::ledger_create_entry_by_external_id_response

          def list_by_external_id: (
            String external_customer_id,
            ?created_at_gt: Time?,
            ?created_at_gte: Time?,
            ?created_at_lt: Time?,
            ?created_at_lte: Time?,
            ?currency: String?,
            ?cursor: String?,
            ?entry_status: Orb::Models::Customers::Credits::LedgerListByExternalIDParams::entry_status?,
            ?entry_type: Orb::Models::Customers::Credits::LedgerListByExternalIDParams::entry_type?,
            ?limit: Integer,
            ?minimum_amount: String?,
            ?request_options: Orb::request_opts
          ) -> Orb::Internal::Page[Orb::Models::Customers::Credits::ledger_list_by_external_id_response]

          def initialize: (client: Orb::Client) -> void
        end
      end
    end
  end
end
