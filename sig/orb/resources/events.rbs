module Orb
  module Resources
    class Events
      attr_reader backfills: Orb::Resources::Events::Backfills

      attr_reader volume: Orb::Resources::Events::Volume

      def update: (
        String event_id,
        event_name: String,
        properties: ::Hash[Symbol, top],
        timestamp: Time,
        ?customer_id: String?,
        ?external_customer_id: String?,
        ?request_options: Orb::request_opts
      ) -> Orb::Models::EventUpdateResponse

      def deprecate: (
        String event_id,
        ?request_options: Orb::request_opts
      ) -> Orb::Models::EventDeprecateResponse

      def ingest: (
        events: ::Array[Orb::EventIngestParams::Event],
        ?backfill_id: String?,
        ?debug: bool,
        ?request_options: Orb::request_opts
      ) -> Orb::Models::EventIngestResponse

      def search: (
        event_ids: ::Array[String],
        ?timeframe_end: Time?,
        ?timeframe_start: Time?,
        ?request_options: Orb::request_opts
      ) -> Orb::Models::EventSearchResponse

      def initialize: (client: Orb::Client) -> void
    end
  end
end
